# yaml-language-server: $schema=https://raw.githubusercontent.com/fern-api/fern/main/fern.schema.json

imports:
  shared: shared.yml

services:
  http:
    TaskService:
      base-path: /tasks
      auth: true
      endpoints:
        create:
          method: POST
          path: /
          request: CreateTaskRequest
          response: Task
        get:
          method: GET
          path: /{task_id}
          path-parameters:
            task_id: TaskId
          response: Task
        update:
          method: PATCH
          path: /{task_id}
          path-parameters:
            task_id: TaskId
          request: CreateTaskRequest
          response: Task
        delete:
          method: DELETE
          path: /{task_id}
          path-parameters:
            task_id: TaskId
        run:
          docs: Reschedules a queued Task to be run immediately.
          method: POST
          path: /{task_id}/run
          path-parameters:
            task_id: TaskId
          response: Task
        batchCreate:
          docs: |
            A maximum of 100 Tasks are accepted per request.

            This operation is atomic: it will succeed for all Tasks or fail for
            all Tasks; there is no partial success.

            This endpoint is in beta and may change at any time without notice.
          method: POST
          path: /batch-create
          request: list<CreateTaskRequest>
          response: list<Task>
        batchDelete:
          method: POST
          path: /batch-delete
          request: list<TaskId>

types:
  CreateTaskRequest:
    properties:
      name:
        docs: |
          An optional name of the Task. This string must not contain more than
          100 characters.
        type: optional<string>
        availability: 
          status: deprecated
          message: To be removed on November 30, 2022.
      request: shared.HttpRequest
      scheduled_for:
        docs: |
          The [ISO 8601 timestamp](https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations)
          for when the Task is scheduled to be executed.

          Example: "2021-10-01T15:53:05Z".
          
          When not present, the Task will be scheduled for immediate execution.
        type: optional<datetime>
      delay:
        docs: |
          The [ISO 8601 duration](https://en.wikipedia.org/wiki/ISO_8601#Durations)
          for the time to wait before the Task is executed.
          
          Example: "PT1M" for a delay of 1 minute.
          
          When both `delay` and `scheduled_for` are present, `delay` will be
          added to `scheduled_for`.
        type: optional<string>
  
  Task:
    extends: CreateTaskRequest
    properties:
      id:
        docs: A unique ID assigned upon creation.
        type: TaskId
      status:
        docs: The status of this Task.
        type: TaskStatus
      created_at:
        docs: |
          The [ISO 8601 timestamp](https://en.wikipedia.org/wiki/ISO_8601#Combined_date_and_time_representations)
          representing when the task was created.
        type: datetime
  
  TaskId: string

  TaskStatus:
    enum:
      - queued
      - working
      - success
      - failure